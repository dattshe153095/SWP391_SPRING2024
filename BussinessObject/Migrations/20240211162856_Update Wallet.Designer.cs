// <auto-generated />
using System;
using BussinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BussinessObject.Migrations
{
    [DbContext(typeof(Web_Trung_GianContext))]
    [Migration("20240211162856_Update Wallet")]
    partial class UpdateWallet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2503),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Quốc tổ Hùng Vương",
                            password = "hungvuong123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2503),
                            username = "hungvuong"
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2505),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Hai Bà Trưng",
                            password = "haibatrung123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2506),
                            username = "haibatrung"
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2507),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Nam Đế",
                            password = "lynamde123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2508),
                            username = "lynamde"
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2509),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Ngô Quyền",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2510),
                            username = "ngoquyen"
                        },
                        new
                        {
                            id = 5,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2512),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Đinh Bộ Lĩnh",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2512),
                            username = "dinhbolinh"
                        },
                        new
                        {
                            id = 6,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2514),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lê Hoàn",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2514),
                            username = "lehoan123"
                        },
                        new
                        {
                            id = 7,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2516),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Công Uẩn",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2516),
                            username = "lyconguan"
                        },
                        new
                        {
                            id = 8,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2517),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Thường Kiệt",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2518),
                            username = "lythuongkiet"
                        },
                        new
                        {
                            id = 9,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2519),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Trần Nhân Tông",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2520),
                            username = "trannhantong"
                        },
                        new
                        {
                            id = 10,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2521),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Trần Hưng Đạo",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2522),
                            username = "tranhungdao"
                        },
                        new
                        {
                            id = 11,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2523),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lê Lợi",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2524),
                            username = "leloi123"
                        },
                        new
                        {
                            id = 12,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2526),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Nguyễn Trãi",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2526),
                            username = "nguyentrai"
                        },
                        new
                        {
                            id = 13,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2527),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Nguyễn Huệ",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2528),
                            username = "quangtrung"
                        },
                        new
                        {
                            id = 14,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2533),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Admin",
                            password = "admin",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2533),
                            username = "admin"
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.AccountRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("desctiption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.ToTable("AccountRoles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            desctiption = "Admin"
                        },
                        new
                        {
                            id = 2,
                            desctiption = "User"
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Deposit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("desctiption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("fee")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.HasIndex("wallet_id");

                    b.ToTable("Deposits");

                    b.HasData(
                        new
                        {
                            id = 1,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2582),
                            create_by = 1,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2583),
                            update_by = 1,
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2585),
                            create_by = 2,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2585),
                            update_by = 2,
                            wallet_id = 2
                        },
                        new
                        {
                            id = 3,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2587),
                            create_by = 3,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2587),
                            update_by = 3,
                            wallet_id = 3
                        },
                        new
                        {
                            id = 4,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2589),
                            create_by = 4,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2590),
                            update_by = 4,
                            wallet_id = 4
                        },
                        new
                        {
                            id = 5,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2591),
                            create_by = 5,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2591),
                            update_by = 5,
                            wallet_id = 5
                        },
                        new
                        {
                            id = 6,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2593),
                            create_by = 6,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2593),
                            update_by = 6,
                            wallet_id = 6
                        },
                        new
                        {
                            id = 7,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2595),
                            create_by = 7,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2595),
                            update_by = 7,
                            wallet_id = 7
                        },
                        new
                        {
                            id = 8,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2597),
                            create_by = 8,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2597),
                            update_by = 8,
                            wallet_id = 8
                        },
                        new
                        {
                            id = 9,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2598),
                            create_by = 9,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2599),
                            update_by = 9,
                            wallet_id = 9
                        },
                        new
                        {
                            id = 10,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2600),
                            create_by = 10,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2601),
                            update_by = 10,
                            wallet_id = 10
                        },
                        new
                        {
                            id = 11,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2602),
                            create_by = 11,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2603),
                            update_by = 11,
                            wallet_id = 11
                        },
                        new
                        {
                            id = 12,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2604),
                            create_by = 12,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2604),
                            update_by = 12,
                            wallet_id = 12
                        },
                        new
                        {
                            id = 13,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2606),
                            create_by = 13,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2606),
                            update_by = 13,
                            wallet_id = 13
                        },
                        new
                        {
                            id = 14,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2608),
                            create_by = 14,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2608),
                            update_by = 14,
                            wallet_id = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("total_price")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("create_by");

                    b.HasIndex("product_id");

                    b.HasIndex("update_by");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BussinessObject.Models.ProcessedTransactionInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("processed_message")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("transaction_error_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("transaction_error_id");

                    b.ToTable("ProcessedTransactionInfo");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2709),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 4
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2711),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 3
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2712),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 1
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2713),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 2
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("categories")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("desctiption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("image")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            categories = 1,
                            code = "DH31UIHI3",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2665),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2666),
                            update_by = 14
                        },
                        new
                        {
                            id = 2,
                            categories = 2,
                            code = "SOD2IF6AP8F",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2668),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2668),
                            update_by = 14
                        },
                        new
                        {
                            id = 3,
                            categories = 3,
                            code = "AL6HEB14E",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2670),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2671),
                            update_by = 14
                        },
                        new
                        {
                            id = 4,
                            categories = 1,
                            code = "IH189AOFA31OH",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2672),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2673),
                            update_by = 14
                        },
                        new
                        {
                            id = 5,
                            categories = 2,
                            code = "JVY8F1KB4VOL",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2674),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2675),
                            update_by = 14
                        },
                        new
                        {
                            id = 6,
                            categories = 3,
                            code = "PO0PM7MO9J",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2676),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2677),
                            update_by = 14
                        },
                        new
                        {
                            id = 7,
                            categories = 1,
                            code = "ATF142DW4YT",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2678),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2679),
                            update_by = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("wallet_id");

                    b.ToTable("TransactionError");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2691),
                            create_by = 1,
                            description = "Lỗi Nạp tiền",
                            status = "done",
                            title = "Lỗi Nạp Tiền",
                            type = "Deposit",
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2692),
                            create_by = 4,
                            description = "Lỗi rút tiền",
                            status = "pending",
                            title = "Lỗi rút Tiền",
                            type = "Withdrawal",
                            wallet_id = 4
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2697),
                            create_by = 7,
                            description = "Lỗi Nạp tiền",
                            status = "done",
                            title = "Lỗi Nạp Tiền",
                            type = "Deposit",
                            wallet_id = 7
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2699),
                            create_by = 10,
                            description = "Lỗi rút tiền",
                            status = "pending",
                            title = "Lỗi rút Tiền",
                            type = "Withdrawal",
                            wallet_id = 10
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<int>("balance")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("update_by");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            id = 1,
                            account_id = 1,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2555),
                            update_by = 1
                        },
                        new
                        {
                            id = 2,
                            account_id = 2,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2556),
                            update_by = 2
                        },
                        new
                        {
                            id = 3,
                            account_id = 3,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2557),
                            update_by = 3
                        },
                        new
                        {
                            id = 4,
                            account_id = 4,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2558),
                            update_by = 4
                        },
                        new
                        {
                            id = 5,
                            account_id = 5,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2559),
                            update_by = 5
                        },
                        new
                        {
                            id = 6,
                            account_id = 6,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2560),
                            update_by = 6
                        },
                        new
                        {
                            id = 7,
                            account_id = 7,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2561),
                            update_by = 7
                        },
                        new
                        {
                            id = 8,
                            account_id = 8,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2562),
                            update_by = 8
                        },
                        new
                        {
                            id = 9,
                            account_id = 9,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2563),
                            update_by = 9
                        },
                        new
                        {
                            id = 10,
                            account_id = 10,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2565),
                            update_by = 10
                        },
                        new
                        {
                            id = 11,
                            account_id = 11,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2565),
                            update_by = 11
                        },
                        new
                        {
                            id = 12,
                            account_id = 12,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2566),
                            update_by = 12
                        },
                        new
                        {
                            id = 13,
                            account_id = 13,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2567),
                            update_by = 13
                        },
                        new
                        {
                            id = 14,
                            account_id = 14,
                            balance = 0,
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2568),
                            update_by = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Withdrawal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("bank_name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("bank_number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bank_user")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<int>("fee")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.HasIndex("wallet_id");

                    b.ToTable("Withdrawals");

                    b.HasData(
                        new
                        {
                            id = 1,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Quốc Tổ Hùng Vương",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2622),
                            create_by = 1,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2623),
                            update_by = 1,
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Hai Bà Trưng",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2625),
                            create_by = 2,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2625),
                            update_by = 2,
                            wallet_id = 2
                        },
                        new
                        {
                            id = 3,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Lý Nam Đế",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2628),
                            create_by = 3,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2628),
                            update_by = 3,
                            wallet_id = 3
                        },
                        new
                        {
                            id = 4,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2630),
                            create_by = 4,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2630),
                            update_by = 4,
                            wallet_id = 4
                        },
                        new
                        {
                            id = 5,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2632),
                            create_by = 5,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2632),
                            update_by = 5,
                            wallet_id = 5
                        },
                        new
                        {
                            id = 6,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2634),
                            create_by = 6,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2634),
                            update_by = 6,
                            wallet_id = 6
                        },
                        new
                        {
                            id = 7,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2636),
                            create_by = 7,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2636),
                            update_by = 7,
                            wallet_id = 7
                        },
                        new
                        {
                            id = 8,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2638),
                            create_by = 8,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2638),
                            update_by = 8,
                            wallet_id = 8
                        },
                        new
                        {
                            id = 9,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2640),
                            create_by = 9,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2640),
                            update_by = 9,
                            wallet_id = 9
                        },
                        new
                        {
                            id = 10,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2642),
                            create_by = 10,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2642),
                            update_by = 10,
                            wallet_id = 10
                        },
                        new
                        {
                            id = 11,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2644),
                            create_by = 11,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2644),
                            update_by = 11,
                            wallet_id = 11
                        },
                        new
                        {
                            id = 12,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2646),
                            create_by = 12,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2646),
                            update_by = 12,
                            wallet_id = 12
                        },
                        new
                        {
                            id = 13,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2648),
                            create_by = 13,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2648),
                            update_by = 13,
                            wallet_id = 13
                        },
                        new
                        {
                            id = 14,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2650),
                            create_by = 14,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 11, 23, 28, 55, 722, DateTimeKind.Local).AddTicks(2651),
                            update_by = 14,
                            wallet_id = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.HasOne("BussinessObject.Models.AccountRole", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BussinessObject.Models.Deposit", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("DepositCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("DepositUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("Deposits")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Order", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("OrderCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("OrderUpdate")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BussinessObject.Models.ProcessedTransactionInfo", b =>
                {
                    b.HasOne("BussinessObject.Models.TransactionError", "TransactionError")
                        .WithMany("ProcessedTransactionInfos")
                        .HasForeignKey("transaction_error_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TransactionError");
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("ProductCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("ProductUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("TransactionErrors")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "Account")
                        .WithMany("Wallets")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("WalletUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountUpdate");
                });

            modelBuilder.Entity("BussinessObject.Models.Withdrawal", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("WithdrawalCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("WithdrawalUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("Withdrawals")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.Navigation("DepositCreates");

                    b.Navigation("DepositUpdates");

                    b.Navigation("OrderCreates");

                    b.Navigation("OrderUpdate");

                    b.Navigation("Orders");

                    b.Navigation("ProductCreates");

                    b.Navigation("ProductUpdates");

                    b.Navigation("WalletUpdates");

                    b.Navigation("Wallets");

                    b.Navigation("WithdrawalCreates");

                    b.Navigation("WithdrawalUpdates");
                });

            modelBuilder.Entity("BussinessObject.Models.AccountRole", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.Navigation("ProcessedTransactionInfos");
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("TransactionErrors");

                    b.Navigation("Withdrawals");
                });
#pragma warning restore 612, 618
        }
    }
}
