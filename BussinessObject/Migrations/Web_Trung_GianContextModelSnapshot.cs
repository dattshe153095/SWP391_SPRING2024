// <auto-generated />
using System;
using BussinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BussinessObject.Migrations
{
    [DbContext(typeof(Web_Trung_GianContext))]
    partial class Web_Trung_GianContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(58),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Quốc tổ Hùng Vương",
                            password = "hungvuong123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(59),
                            username = "hungvuong"
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(62),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Hai Bà Trưng",
                            password = "haibatrung123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(63),
                            username = "haibatrung"
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(65),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Nam Đế",
                            password = "lynamde123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(66),
                            username = "lynamde"
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(68),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Ngô Quyền",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(69),
                            username = "ngoquyen"
                        },
                        new
                        {
                            id = 5,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(71),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Đinh Bộ Lĩnh",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(72),
                            username = "dinhbolinh"
                        },
                        new
                        {
                            id = 6,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(74),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lê Hoàn",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(75),
                            username = "lehoan123"
                        },
                        new
                        {
                            id = 7,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(78),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Công Uẩn",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(79),
                            username = "lyconguan"
                        },
                        new
                        {
                            id = 8,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(81),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Thường Kiệt",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(82),
                            username = "lythuongkiet"
                        },
                        new
                        {
                            id = 9,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(84),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Trần Nhân Tông",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(85),
                            username = "trannhantong"
                        },
                        new
                        {
                            id = 10,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(87),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Trần Hưng Đạo",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(87),
                            username = "tranhungdao"
                        },
                        new
                        {
                            id = 11,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(90),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lê Lợi",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(90),
                            username = "leloi123"
                        },
                        new
                        {
                            id = 12,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(94),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Nguyễn Trãi",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(94),
                            username = "nguyentrai"
                        },
                        new
                        {
                            id = 13,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(96),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Nguyễn Huệ",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(97),
                            username = "quangtrung"
                        },
                        new
                        {
                            id = 14,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(99),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Admin",
                            password = "admin",
                            phone = "0987654321",
                            role_id = 1,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(100),
                            username = "admin"
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.AccountRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("desctiption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.ToTable("AccountRoles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            desctiption = "Admin"
                        },
                        new
                        {
                            id = 2,
                            desctiption = "User"
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Deposit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("desctiption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("fee")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.HasIndex("wallet_id");

                    b.ToTable("Deposits");

                    b.HasData(
                        new
                        {
                            id = 1,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(172),
                            create_by = 1,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(173),
                            update_by = 1,
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(177),
                            create_by = 2,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(177),
                            update_by = 2,
                            wallet_id = 2
                        },
                        new
                        {
                            id = 3,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(179),
                            create_by = 3,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(180),
                            update_by = 3,
                            wallet_id = 3
                        },
                        new
                        {
                            id = 4,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(182),
                            create_by = 4,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(183),
                            update_by = 4,
                            wallet_id = 4
                        },
                        new
                        {
                            id = 5,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(185),
                            create_by = 5,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(186),
                            update_by = 5,
                            wallet_id = 5
                        },
                        new
                        {
                            id = 6,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(188),
                            create_by = 6,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(188),
                            update_by = 6,
                            wallet_id = 6
                        },
                        new
                        {
                            id = 7,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(190),
                            create_by = 7,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(191),
                            update_by = 7,
                            wallet_id = 7
                        },
                        new
                        {
                            id = 8,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(193),
                            create_by = 8,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(194),
                            update_by = 8,
                            wallet_id = 8
                        },
                        new
                        {
                            id = 9,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(196),
                            create_by = 9,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(197),
                            update_by = 9,
                            wallet_id = 9
                        },
                        new
                        {
                            id = 10,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(199),
                            create_by = 10,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(199),
                            update_by = 10,
                            wallet_id = 10
                        },
                        new
                        {
                            id = 11,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(201),
                            create_by = 11,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(202),
                            update_by = 11,
                            wallet_id = 11
                        },
                        new
                        {
                            id = 12,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(204),
                            create_by = 12,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(205),
                            update_by = 12,
                            wallet_id = 12
                        },
                        new
                        {
                            id = 13,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(207),
                            create_by = 13,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(207),
                            update_by = 13,
                            wallet_id = 13
                        },
                        new
                        {
                            id = 14,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(210),
                            create_by = 14,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(210),
                            update_by = 14,
                            wallet_id = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("total_price")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("create_by");

                    b.HasIndex("product_id");

                    b.HasIndex("update_by");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BussinessObject.Models.ProcessedTransactionInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("processed_message")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("transaction_error_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("transaction_error_id");

                    b.ToTable("ProcessedTransactionInfo");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(355),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 4
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(357),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 3
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(359),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 1
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(360),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 2
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("categories")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("desctiption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("image")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            categories = 1,
                            code = "DH31UIHI3",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(295),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(296),
                            update_by = 14
                        },
                        new
                        {
                            id = 2,
                            categories = 2,
                            code = "SOD2IF6AP8F",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(300),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(300),
                            update_by = 14
                        },
                        new
                        {
                            id = 3,
                            categories = 3,
                            code = "AL6HEB14E",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(303),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(304),
                            update_by = 14
                        },
                        new
                        {
                            id = 4,
                            categories = 1,
                            code = "IH189AOFA31OH",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(306),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(306),
                            update_by = 14
                        },
                        new
                        {
                            id = 5,
                            categories = 2,
                            code = "JVY8F1KB4VOL",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(309),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(310),
                            update_by = 14
                        },
                        new
                        {
                            id = 6,
                            categories = 3,
                            code = "PO0PM7MO9J",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(312),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(312),
                            update_by = 14
                        },
                        new
                        {
                            id = 7,
                            categories = 1,
                            code = "ATF142DW4YT",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(315),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(315),
                            update_by = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("wallet_id");

                    b.ToTable("TransactionError");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(332),
                            create_by = 1,
                            description = "Lỗi Nạp tiền",
                            status = "done",
                            title = "Lỗi Nạp Tiền",
                            type = "Deposit",
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(335),
                            create_by = 4,
                            description = "Lỗi rút tiền",
                            status = "pending",
                            title = "Lỗi rút Tiền",
                            type = "Withdrawal",
                            wallet_id = 4
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(337),
                            create_by = 7,
                            description = "Lỗi Nạp tiền",
                            status = "done",
                            title = "Lỗi Nạp Tiền",
                            type = "Deposit",
                            wallet_id = 7
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(338),
                            create_by = 10,
                            description = "Lỗi rút tiền",
                            status = "pending",
                            title = "Lỗi rút Tiền",
                            type = "Withdrawal",
                            wallet_id = 10
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<int>("balance")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("update_by");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            id = 1,
                            account_id = 1,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(123),
                            update_by = 1
                        },
                        new
                        {
                            id = 2,
                            account_id = 2,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(126),
                            update_by = 2
                        },
                        new
                        {
                            id = 3,
                            account_id = 3,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(127),
                            update_by = 3
                        },
                        new
                        {
                            id = 4,
                            account_id = 4,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(128),
                            update_by = 4
                        },
                        new
                        {
                            id = 5,
                            account_id = 5,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(136),
                            update_by = 5
                        },
                        new
                        {
                            id = 6,
                            account_id = 6,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(137),
                            update_by = 6
                        },
                        new
                        {
                            id = 7,
                            account_id = 7,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(139),
                            update_by = 7
                        },
                        new
                        {
                            id = 8,
                            account_id = 8,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(140),
                            update_by = 8
                        },
                        new
                        {
                            id = 9,
                            account_id = 9,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(142),
                            update_by = 9
                        },
                        new
                        {
                            id = 10,
                            account_id = 10,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(143),
                            update_by = 10
                        },
                        new
                        {
                            id = 11,
                            account_id = 11,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(144),
                            update_by = 11
                        },
                        new
                        {
                            id = 12,
                            account_id = 12,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(146),
                            update_by = 12
                        },
                        new
                        {
                            id = 13,
                            account_id = 13,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(147),
                            update_by = 13
                        },
                        new
                        {
                            id = 14,
                            account_id = 14,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(149),
                            update_by = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Withdrawal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("bank_name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("bank_number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bank_user")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<int>("fee")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.HasIndex("wallet_id");

                    b.ToTable("Withdrawals");

                    b.HasData(
                        new
                        {
                            id = 1,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Quốc Tổ Hùng Vương",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(232),
                            create_by = 1,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(233),
                            update_by = 1,
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Hai Bà Trưng",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(236),
                            create_by = 2,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(237),
                            update_by = 2,
                            wallet_id = 2
                        },
                        new
                        {
                            id = 3,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Lý Nam Đế",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(240),
                            create_by = 3,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(240),
                            update_by = 3,
                            wallet_id = 3
                        },
                        new
                        {
                            id = 4,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(243),
                            create_by = 4,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(243),
                            update_by = 4,
                            wallet_id = 4
                        },
                        new
                        {
                            id = 5,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(246),
                            create_by = 5,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(246),
                            update_by = 5,
                            wallet_id = 5
                        },
                        new
                        {
                            id = 6,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(249),
                            create_by = 6,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(249),
                            update_by = 6,
                            wallet_id = 6
                        },
                        new
                        {
                            id = 7,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(252),
                            create_by = 7,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(252),
                            update_by = 7,
                            wallet_id = 7
                        },
                        new
                        {
                            id = 8,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(255),
                            create_by = 8,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(255),
                            update_by = 8,
                            wallet_id = 8
                        },
                        new
                        {
                            id = 9,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(258),
                            create_by = 9,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(258),
                            update_by = 9,
                            wallet_id = 9
                        },
                        new
                        {
                            id = 10,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(261),
                            create_by = 10,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(261),
                            update_by = 10,
                            wallet_id = 10
                        },
                        new
                        {
                            id = 11,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(264),
                            create_by = 11,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(264),
                            update_by = 11,
                            wallet_id = 11
                        },
                        new
                        {
                            id = 12,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(268),
                            create_by = 12,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(269),
                            update_by = 12,
                            wallet_id = 12
                        },
                        new
                        {
                            id = 13,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(272),
                            create_by = 13,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(273),
                            update_by = 13,
                            wallet_id = 13
                        },
                        new
                        {
                            id = 14,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(275),
                            create_by = 14,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 18, 20, 47, 4, 910, DateTimeKind.Local).AddTicks(276),
                            update_by = 14,
                            wallet_id = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.HasOne("BussinessObject.Models.AccountRole", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BussinessObject.Models.Deposit", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("DepositCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("DepositUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("Deposits")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Order", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("OrderCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("OrderUpdate")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BussinessObject.Models.ProcessedTransactionInfo", b =>
                {
                    b.HasOne("BussinessObject.Models.TransactionError", "TransactionError")
                        .WithMany("ProcessedTransactionInfos")
                        .HasForeignKey("transaction_error_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TransactionError");
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("ProductCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("ProductUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("TransactionErrors")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "Account")
                        .WithMany("Wallets")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("WalletUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountUpdate");
                });

            modelBuilder.Entity("BussinessObject.Models.Withdrawal", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("WithdrawalCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("WithdrawalUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("Withdrawals")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.Navigation("DepositCreates");

                    b.Navigation("DepositUpdates");

                    b.Navigation("OrderCreates");

                    b.Navigation("OrderUpdate");

                    b.Navigation("Orders");

                    b.Navigation("ProductCreates");

                    b.Navigation("ProductUpdates");

                    b.Navigation("WalletUpdates");

                    b.Navigation("Wallets");

                    b.Navigation("WithdrawalCreates");

                    b.Navigation("WithdrawalUpdates");
                });

            modelBuilder.Entity("BussinessObject.Models.AccountRole", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.Navigation("ProcessedTransactionInfos");
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("TransactionErrors");

                    b.Navigation("Withdrawals");
                });
#pragma warning restore 612, 618
        }
    }
}
