// <auto-generated />
using System;
using BussinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BussinessObject.Migrations
{
    [DbContext(typeof(Web_Trung_GianContext))]
    partial class Web_Trung_GianContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8096),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Quốc tổ Hùng Vương",
                            password = "hungvuong123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8097),
                            username = "hungvuong"
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8099),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Hai Bà Trưng",
                            password = "haibatrung123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8099),
                            username = "haibatrung"
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8100),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Nam Đế",
                            password = "lynamde123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8101),
                            username = "lynamde"
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8102),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Ngô Quyền",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8102),
                            username = "ngoquyen"
                        },
                        new
                        {
                            id = 5,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8103),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Đinh Bộ Lĩnh",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8104),
                            username = "dinhbolinh"
                        },
                        new
                        {
                            id = 6,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8105),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lê Hoàn",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8105),
                            username = "lehoan123"
                        },
                        new
                        {
                            id = 7,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8106),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Công Uẩn",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8107),
                            username = "lyconguan"
                        },
                        new
                        {
                            id = 8,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8108),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lý Thường Kiệt",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8108),
                            username = "lythuongkiet"
                        },
                        new
                        {
                            id = 9,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8109),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Trần Nhân Tông",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8110),
                            username = "trannhantong"
                        },
                        new
                        {
                            id = 10,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8111),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Trần Hưng Đạo",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8111),
                            username = "tranhungdao"
                        },
                        new
                        {
                            id = 11,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8112),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Lê Lợi",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8113),
                            username = "leloi123"
                        },
                        new
                        {
                            id = 12,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8114),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Nguyễn Trãi",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8114),
                            username = "nguyentrai"
                        },
                        new
                        {
                            id = 13,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8115),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Nguyễn Huệ",
                            password = "pass123",
                            phone = "0987654321",
                            role_id = 2,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8115),
                            username = "quangtrung"
                        },
                        new
                        {
                            id = 14,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8117),
                            email = "waterball208@gmail.com",
                            is_delete = false,
                            name = "Admin",
                            password = "admin",
                            phone = "0987654321",
                            role_id = 1,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8117),
                            username = "admin"
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.AccountRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("desctiption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.ToTable("AccountRoles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            desctiption = "Admin"
                        },
                        new
                        {
                            id = 2,
                            desctiption = "User"
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Deposit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("desctiption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("fee")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.HasIndex("wallet_id");

                    b.ToTable("Deposits");

                    b.HasData(
                        new
                        {
                            id = 1,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8145),
                            create_by = 1,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8146),
                            update_by = 1,
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8148),
                            create_by = 2,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8148),
                            update_by = 2,
                            wallet_id = 2
                        },
                        new
                        {
                            id = 3,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8149),
                            create_by = 3,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8150),
                            update_by = 3,
                            wallet_id = 3
                        },
                        new
                        {
                            id = 4,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8151),
                            create_by = 4,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8151),
                            update_by = 4,
                            wallet_id = 4
                        },
                        new
                        {
                            id = 5,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8152),
                            create_by = 5,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8152),
                            update_by = 5,
                            wallet_id = 5
                        },
                        new
                        {
                            id = 6,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8154),
                            create_by = 6,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8154),
                            update_by = 6,
                            wallet_id = 6
                        },
                        new
                        {
                            id = 7,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8155),
                            create_by = 7,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8155),
                            update_by = 7,
                            wallet_id = 7
                        },
                        new
                        {
                            id = 8,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8156),
                            create_by = 8,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8157),
                            update_by = 8,
                            wallet_id = 8
                        },
                        new
                        {
                            id = 9,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8158),
                            create_by = 9,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8158),
                            update_by = 9,
                            wallet_id = 9
                        },
                        new
                        {
                            id = 10,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8159),
                            create_by = 10,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8159),
                            update_by = 10,
                            wallet_id = 10
                        },
                        new
                        {
                            id = 11,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8161),
                            create_by = 11,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8161),
                            update_by = 11,
                            wallet_id = 11
                        },
                        new
                        {
                            id = 12,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8162),
                            create_by = 12,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8162),
                            update_by = 12,
                            wallet_id = 12
                        },
                        new
                        {
                            id = 13,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8163),
                            create_by = 13,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8164),
                            update_by = 13,
                            wallet_id = 13
                        },
                        new
                        {
                            id = 14,
                            amount = 10000,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8165),
                            create_by = 14,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8165),
                            update_by = 14,
                            wallet_id = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("total_price")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("create_by");

                    b.HasIndex("product_id");

                    b.HasIndex("update_by");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BussinessObject.Models.ProcessedTransactionInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("processed_message")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("transaction_error_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("transaction_error_id");

                    b.ToTable("ProcessedTransactionInfo");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8237),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 4
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8239),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 3
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8240),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 1
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8241),
                            create_by = 14,
                            processed_message = "Đã xử lí",
                            transaction_error_id = 2
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("categories")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("desctiption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("image")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            categories = 1,
                            code = "DH31UIHI3",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8211),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8211),
                            update_by = 14
                        },
                        new
                        {
                            id = 2,
                            categories = 2,
                            code = "SOD2IF6AP8F",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8213),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8214),
                            update_by = 14
                        },
                        new
                        {
                            id = 3,
                            categories = 3,
                            code = "AL6HEB14E",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8215),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8215),
                            update_by = 14
                        },
                        new
                        {
                            id = 4,
                            categories = 1,
                            code = "IH189AOFA31OH",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8216),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8217),
                            update_by = 14
                        },
                        new
                        {
                            id = 5,
                            categories = 2,
                            code = "JVY8F1KB4VOL",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8218),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8218),
                            update_by = 14
                        },
                        new
                        {
                            id = 6,
                            categories = 3,
                            code = "PO0PM7MO9J",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8219),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8220),
                            update_by = 14
                        },
                        new
                        {
                            id = 7,
                            categories = 1,
                            code = "ATF142DW4YT",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8221),
                            create_by = 14,
                            is_delete = false,
                            link = "#",
                            price = 1000,
                            quantity = 100,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8221),
                            update_by = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("wallet_id");

                    b.ToTable("TransactionError");

                    b.HasData(
                        new
                        {
                            id = 1,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8228),
                            create_by = 1,
                            description = "Lỗi Nạp tiền",
                            status = "done",
                            title = "Lỗi Nạp Tiền",
                            type = "Deposit",
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8229),
                            create_by = 4,
                            description = "Lỗi rút tiền",
                            status = "pending",
                            title = "Lỗi rút Tiền",
                            type = "Withdrawal",
                            wallet_id = 4
                        },
                        new
                        {
                            id = 3,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8231),
                            create_by = 7,
                            description = "Lỗi Nạp tiền",
                            status = "done",
                            title = "Lỗi Nạp Tiền",
                            type = "Deposit",
                            wallet_id = 7
                        },
                        new
                        {
                            id = 4,
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8232),
                            create_by = 10,
                            description = "Lỗi rút tiền",
                            status = "pending",
                            title = "Lỗi rút Tiền",
                            type = "Withdrawal",
                            wallet_id = 10
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<int>("balance")
                        .HasColumnType("int");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("account_id");

                    b.HasIndex("update_by");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            id = 1,
                            account_id = 1,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8126),
                            update_by = 1
                        },
                        new
                        {
                            id = 2,
                            account_id = 2,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8128),
                            update_by = 2
                        },
                        new
                        {
                            id = 3,
                            account_id = 3,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8128),
                            update_by = 3
                        },
                        new
                        {
                            id = 4,
                            account_id = 4,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8129),
                            update_by = 4
                        },
                        new
                        {
                            id = 5,
                            account_id = 5,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8130),
                            update_by = 5
                        },
                        new
                        {
                            id = 6,
                            account_id = 6,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8131),
                            update_by = 6
                        },
                        new
                        {
                            id = 7,
                            account_id = 7,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8131),
                            update_by = 7
                        },
                        new
                        {
                            id = 8,
                            account_id = 8,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8132),
                            update_by = 8
                        },
                        new
                        {
                            id = 9,
                            account_id = 9,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8133),
                            update_by = 9
                        },
                        new
                        {
                            id = 10,
                            account_id = 10,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8133),
                            update_by = 10
                        },
                        new
                        {
                            id = 11,
                            account_id = 11,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8134),
                            update_by = 11
                        },
                        new
                        {
                            id = 12,
                            account_id = 12,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8135),
                            update_by = 12
                        },
                        new
                        {
                            id = 13,
                            account_id = 13,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8136),
                            update_by = 13
                        },
                        new
                        {
                            id = 14,
                            account_id = 14,
                            balance = 10000,
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8136),
                            update_by = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Withdrawal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("bank_name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("bank_number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("bank_user")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("create_by")
                        .HasColumnType("int");

                    b.Property<int>("fee")
                        .HasColumnType("int");

                    b.Property<bool>("is_delete")
                        .HasColumnType("bit");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("update_by")
                        .HasColumnType("int");

                    b.Property<int>("wallet_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("create_by");

                    b.HasIndex("update_by");

                    b.HasIndex("wallet_id");

                    b.ToTable("Withdrawals");

                    b.HasData(
                        new
                        {
                            id = 1,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Quốc Tổ Hùng Vương",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8175),
                            create_by = 1,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8175),
                            update_by = 1,
                            wallet_id = 1
                        },
                        new
                        {
                            id = 2,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Hai Bà Trưng",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8177),
                            create_by = 2,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8177),
                            update_by = 2,
                            wallet_id = 2
                        },
                        new
                        {
                            id = 3,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Lý Nam Đế",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8179),
                            create_by = 3,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8179),
                            update_by = 3,
                            wallet_id = 3
                        },
                        new
                        {
                            id = 4,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8180),
                            create_by = 4,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8181),
                            update_by = 4,
                            wallet_id = 4
                        },
                        new
                        {
                            id = 5,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8188),
                            create_by = 5,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8188),
                            update_by = 5,
                            wallet_id = 5
                        },
                        new
                        {
                            id = 6,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8189),
                            create_by = 6,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8189),
                            update_by = 6,
                            wallet_id = 6
                        },
                        new
                        {
                            id = 7,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8191),
                            create_by = 7,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8191),
                            update_by = 7,
                            wallet_id = 7
                        },
                        new
                        {
                            id = 8,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8192),
                            create_by = 8,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8193),
                            update_by = 8,
                            wallet_id = 8
                        },
                        new
                        {
                            id = 9,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8194),
                            create_by = 9,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8194),
                            update_by = 9,
                            wallet_id = 9
                        },
                        new
                        {
                            id = 10,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8195),
                            create_by = 10,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8196),
                            update_by = 10,
                            wallet_id = 10
                        },
                        new
                        {
                            id = 11,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8197),
                            create_by = 11,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8197),
                            update_by = 11,
                            wallet_id = 11
                        },
                        new
                        {
                            id = 12,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8198),
                            create_by = 12,
                            fee = 500,
                            is_delete = false,
                            status = "done",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8199),
                            update_by = 12,
                            wallet_id = 12
                        },
                        new
                        {
                            id = 13,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8200),
                            create_by = 13,
                            fee = 500,
                            is_delete = false,
                            status = "pending",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8200),
                            update_by = 13,
                            wallet_id = 13
                        },
                        new
                        {
                            id = 14,
                            amount = 10000,
                            bank_name = "TP Bank",
                            bank_number = "789654312",
                            bank_user = "Bank User Name",
                            create_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8201),
                            create_by = 14,
                            fee = 500,
                            is_delete = false,
                            status = "error",
                            update_at = new DateTime(2024, 2, 15, 16, 20, 54, 722, DateTimeKind.Local).AddTicks(8202),
                            update_by = 14,
                            wallet_id = 14
                        });
                });

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.HasOne("BussinessObject.Models.AccountRole", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BussinessObject.Models.Deposit", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("DepositCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("DepositUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("Deposits")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Order", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("OrderCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("OrderUpdate")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BussinessObject.Models.ProcessedTransactionInfo", b =>
                {
                    b.HasOne("BussinessObject.Models.TransactionError", "TransactionError")
                        .WithMany("ProcessedTransactionInfos")
                        .HasForeignKey("transaction_error_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TransactionError");
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("ProductCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("ProductUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("TransactionErrors")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "Account")
                        .WithMany("Wallets")
                        .HasForeignKey("account_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("WalletUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountUpdate");
                });

            modelBuilder.Entity("BussinessObject.Models.Withdrawal", b =>
                {
                    b.HasOne("BussinessObject.Models.Account", "AccountCreate")
                        .WithMany("WithdrawalCreates")
                        .HasForeignKey("create_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Account", "AccountUpdate")
                        .WithMany("WithdrawalUpdates")
                        .HasForeignKey("update_by")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Wallet", "Wallet")
                        .WithMany("Withdrawals")
                        .HasForeignKey("wallet_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountCreate");

                    b.Navigation("AccountUpdate");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.Navigation("DepositCreates");

                    b.Navigation("DepositUpdates");

                    b.Navigation("OrderCreates");

                    b.Navigation("OrderUpdate");

                    b.Navigation("Orders");

                    b.Navigation("ProductCreates");

                    b.Navigation("ProductUpdates");

                    b.Navigation("WalletUpdates");

                    b.Navigation("Wallets");

                    b.Navigation("WithdrawalCreates");

                    b.Navigation("WithdrawalUpdates");
                });

            modelBuilder.Entity("BussinessObject.Models.AccountRole", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BussinessObject.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BussinessObject.Models.TransactionError", b =>
                {
                    b.Navigation("ProcessedTransactionInfos");
                });

            modelBuilder.Entity("BussinessObject.Models.Wallet", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("TransactionErrors");

                    b.Navigation("Withdrawals");
                });
#pragma warning restore 612, 618
        }
    }
}
