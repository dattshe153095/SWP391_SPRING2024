@using Business.Models;
@using DataAccess.DAO;
@using WebClient2
@using WebClient2.Models
@model WebClient2.ViewModel.RegisterViewModel

<div class="row">
    <div class="col-md-10">
        <section class="vh-100 bg-image"
                 style="background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');">
            <div class="mask d-flex align-items-center h-100 gradient-custom-3">
                <div class="container h-100">
                    <div class="row d-flex justify-content-center align-items-center h-100">
                        <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                            <div class="card" style="border-radius: 15px;">
                                <div class="card-body p-5">
                                    <h2 class="text-uppercase text-center mb-6">Create an account</h2>
                                    <form style="display: grid" method="post" asp-controller="Home" asp-action="Register">
                                        <div class="row">
                                            <div class="form-outline mb-6">
                                                <label class="control-label">Name</label>
                                                <input asp-for="Name" type="text" class="form-control" placeholder="Name" />
                                                <span asp-validation-for="Name" class="text-danger"></span>
                                            </div>
                                            <div class="form-outline mb-6">
                                                @Html.LabelFor(temp => temp.Username)
                                                @Html.TextBoxFor(temp => temp.Username, new { placeholder = "Username", @class = "form-control" })
                                                @Html.ValidationMessageFor(temp => temp.Username)
                                            </div>
                                            <div class="form-outline mb-6">
                                                @Html.LabelFor(temp => temp.Email)
                                                @Html.TextBoxFor(temp => temp.Email, new { placeholder = "Email", @class = "form-control" })
                                                @Html.ValidationMessageFor(temp => temp.Email)
                                                <button type="button" onclick="sendEmail()">Send Email</button> <!-- Thêm nút gửi email -->
                                            </div>
                                            <div class="form-outline mb-6">
                                                @Html.LabelFor(temp => temp.Phone)
                                                @Html.TextBoxFor(temp => temp.Phone, new { placeholder = "Phone", @class = "form-control" })
                                                @Html.ValidationMessageFor(temp => temp.Phone)

                                            </div>
                                            <div class="password-fields-row">
                                                <div class="form-outline mb-6" style="margin-right: 15px">
                                                    @Html.LabelFor(model => model.Password)
                                                    @Html.PasswordFor(model => model.Password, new { placeholder = "Password", @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Password)
                                                </div>
                                                <div class="form-outline mb-6">
                                                    @Html.LabelFor(model => model.ConfirmPassword)  <!-- Corrected typo here -->
                                                    @Html.PasswordFor(model => model.ConfirmPassword, new { placeholder = "Confirm Password", @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                                </div>
                                            </div>
                                            <div class="captcha-div">
                                                <span id="Captcha-image">
                                                    <img id="captchaImage" src="data:image/png;base64,@ViewBag.CaptchaImageBytes"
                                                         alt="Captcha Image" />
                                                </span>
                                                <div class="input-group">
                                                    <input type="text" id="captcha" name="captcha" class="captcha-form form-control" placeholder="Input capcha" required>
                                                    <button type="button" id="refreshCaptcha"><i class="fa fa-refresh" aria-hidden="true"></i></button>
                                                </div>
                                            </div>

                                        </div>
                                        <button type="submit" class="btn btn-success">Register</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="https://kit.fontawesome.com/6ae4d71e22.js" crossorigin="anonymous"></script>

<script>
    function sendEmail() {
        var email = $("#email").val();

        $.ajax({
            type: "POST", // hoặc "GET" tùy thuộc vào loại yêu cầu của bạn
            url: "/Home/SendEmail", // Thay thế bằng đường dẫn của action bạn muốn gọi
            data: { email: email },
            success: function (result) {
                // Xử lý kết quả từ action nếu cần
                console.log(result);
                alert("Email Have Send Check Email To Get Code");
            },
            error: function (error) {
                // Xử lý lỗi nếu có
                console.log(error);
            }
        });
    }
    $(document).ready(function () {
        // Gán sự kiện click cho nút refresh captcha
        $("#refreshCaptcha").on("click", function () {
            refreshCaptchaImage();
        });
    });

    function refreshCaptchaImage() {
        $.ajax({
            type: "POST",
            url: "/Home/RefreshCaptchaForgotPassword", // Thay thế bằng đường dẫn của action cập nhật captcha
            success: function (result) {
                // Cập nhật ảnh captcha mới
                $("#captchaImage").attr("src", "data:image/png;base64," + result);
                $('#captcha').val('');
            },
            error: function (error) {
                console.log(error);
            }
        });
    }
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}